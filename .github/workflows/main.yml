# Build Multitarget Application & Deploy it to Cloud Foundry
name: Build MTA & Deploy it to CF

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build-project
    runs-on: ubuntu-latest #our job will run on the latest stable version of Ubuntu Linux 
    steps:
    - uses: actions/checkout@v4  #This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
    - name: Use Node.js
      uses: actions/setup-node@v4 #This action provides Nodejs functionality
      with:
        node-version: 20
    - run: npm ci #Clean Install (ci)

    - name: Install MTA Build Tool 
      run: npm install -g mbt
    # Do not generate package-lock.json
    # See https://blogs.sap.com/2020/07/07/escaping-eintegrity-hell/
     
    - name:   Install Packages cds
      run:    npm install @sap/cds
    
    - name: Build MTA
      run: mbt build -p cf   # -p cf --> (platform cloud foundry)

    - name: Upload Artifact
      uses: actions/upload-artifact@v4	#carga el artefacto mta en la ruta ...
      with:	
        name: mta
        path: ./mta_archives/risk-management_1.0.0.mtar
  deploy:
     name: deploy project
     runs-on: ubuntu-latest #our job will run on the latest stable version of Ubuntu Linux 
     needs: build           #utilizaremmos el artefacto de del job anterior
     steps:
       - name: Download Artifact
         uses: actions/download-artifact@v4
         with:
           name: mta
           #path: ./  
       - name: Test artifact downloaded
         run: ls -R 
       - name: Deploy to Cloud Foundry
         uses: guerric-p/cf-cli-action@master #Deploy to CF and manage your apps and services using the CF CLI
         with:
           cf_api: https://api.cf.us10-001.hana.ondemand.com
           cf_username: ${{ secrets.CF_USERNAME }}
           cf_password: ${{ secrets.CF_PASSWORD }}
           cf_org: ${{ secrets.CF_ORG }}
           cf_space: ${{ secrets.CF_SPACE }}
           command: deploy risk-management_1.0.0.mtar -f --delete-services
